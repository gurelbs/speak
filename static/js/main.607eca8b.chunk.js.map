{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useSpeechRecognition","transcript","finalTranscript","listening","resetTranscript","browserSupportsSpeechRecognition","React","useEffect","speak","SpeechSynthesisUtterance","speechSynthesis","console","log","Mobile","Reco","window","SpeechRecognition","webkitSpeechRecognition","onClick","reco","start","onresult","e","results","onCopy","preventDefault","stopListening","startListening","continuous","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NA0EeA,MAtEf,WACE,MAMIC,iCALFC,EADF,EACEA,WACAC,EAFF,EAEEA,gBACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,gBACAC,EALF,EAKEA,iCAgBF,GAbAC,IAAMC,WAAU,WACd,GAAIL,EAAgB,CAClB,IAAMM,EAAQ,IAAIC,yBAAyBP,GAC3CQ,gBAAgBF,MAAMA,GACtBG,QAAQC,IAAIV,MAEd,CAACA,KAOEG,EAEH,OADAM,QAAQC,IAAR,+CACO,+EAET,SAASC,IACP,IAAMC,EAAOC,OAAOC,mBAAqBD,OAAOE,wBAWhD,OAAO,wBAAQC,QATf,WACE,IAAIC,EAAO,IAAIL,EACfK,EAAKC,QACLD,EAAKE,UAAS,SAAAC,GACZ,IAAIrB,EAAaqB,EAAEC,QAAQ,GAAG,GAAGtB,WACjCU,QAAQC,IAAIU,EAAEC,QAAStB,OAIpB,0GAIT,OACE,gCACE,mFACAE,EACE,2BACA,8BAEF,yBACEqB,OAAQ,SAACF,GAEP,OADAA,EAAEG,kBACK,GAETP,QACE,kBAAMf,EACJa,IAAkBU,iBAtC1BtB,SACAY,IAAkBW,eAAe,CAAEC,YAAY,MA8B7C,kDAWAzB,EACE,iCACD,oCAED,4BAAIF,IACJ,cAACY,EAAD,QCzDSgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.607eca8b.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport SpeechRecognition, {useSpeechRecognition} from 'react-speech-recognition';\n\nfunction App() {\n  const {\n    transcript,\n    finalTranscript,\n    listening,  \n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n\n  React.useEffect(() => {\n    if (finalTranscript){\n      const speak = new SpeechSynthesisUtterance(finalTranscript)\n      speechSynthesis.speak(speak)\n      console.log(finalTranscript);\n    }\n  },[finalTranscript])\n\n  const startListening = () => {\n    resetTranscript()\n    SpeechRecognition.startListening({ continuous: true });\n  }\n\n  if (!browserSupportsSpeechRecognition) {\n    console.log(`Browser doesn't support speech recognition.`);\n    return <span>Browser doesn't support speech recognition.</span>;\n  }\n  function Mobile(){\n    const Reco = window.SpeechRecognition || window.webkitSpeechRecognition\n    \n    function handleReco(){\n      let reco = new Reco()\n      reco.start()\n      reco.onresult(e => {\n        let transcript = e.results[0][0].transcript;\n        console.log(e.results, transcript);\n      })\n    }\n    \n    return <button onClick={handleReco}>\n      זיהוי קולי בטלפון\n    </button>\n  }\n  return (\n    <div>\n      <p>מיקרופון: {\n      listening \n      ? 'פעיל' \n      : 'כבוי'\n      }</p>\n      <button\n        onCopy={(e)=>{\n          e.preventDefault()\n          return false;\n        }}\n        onClick={\n          () => listening \n          ? SpeechRecognition.stopListening() \n          : startListening()\n        }\n      >לחיצה ל{\n      listening \n      ? 'דיבור' \n      :'כיבוי'\n      }</button>\n      <p>{transcript}</p>\n      <Mobile/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}